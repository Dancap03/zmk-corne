/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&hml ESC TAB  &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp LCTRL     &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMI  &hmr RCTRL SQT
&kp LSHFT     &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RSHFT
                            &kp LEFT_GUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RIGHT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1        &kp N2  &kp N3    &kp N4     &kp N5       &kp N6     &kp N7        &kp N8        &kp N9        &kp N0    &trans
&kp CAPS   &kp NUMBER_6  &kp N7  &kp N8    &kp N9     &kp M        &kp EQUAL  &kp MINUS     &kp RA(LBKT)  &kp RA(RBKT)  &kp RBKT  &trans
&trans     &none         &none   &none     &kp LC(C)  &kp LC(V)    &kp NUBS   &kp RS(NUBS)  &kp RA(APOS)  &kp RA(BSLH)  &kp BSLH  &trans
                                 &kp LALT  &trans     &trans       &trans     &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp DELETE  &none  &none             &kp LG(LC(F4))  &kp UP    &kp LG(LC(D))    &kp ESC   &kp UP    &kp PSCRN      &none              &none  &trans
&trans      &none  &kp LC(LEFT_GUI)  &kp LEFT        &kp DOWN  &kp RIGHT        &kp LEFT  &kp DOWN  &kp RIGHT      &kp RC(RIGHT_GUI)  &none  &trans
&trans      &none  &none             &none           &none     &none            &none     &none     &none          &none              &none  &trans
                                     &kp LEFT_GUI    &trans    &trans           &trans    &trans    &kp RIGHT_GUI
            >;
        };

        layer_3 {
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans   &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans   &trans   &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
